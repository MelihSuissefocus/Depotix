{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/melihoezkan/Documents/Projekte/Depotix/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":["file:///Users/melihoezkan/Documents/Projekte/Depotix/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,8OAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;AAEA,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,8OAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 222, "column": 0}, "map": {"version":3,"sources":["file:///Users/melihoezkan/Documents/Projekte/Depotix/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nfunction ChartContainer({\n  id,\n  className,\n  children,\n  config,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  config: ChartConfig\n  children: React.ComponentProps<\n    typeof RechartsPrimitive.ResponsiveContainer\n  >[\"children\"]\n}) {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-slot=\"chart\"\n        data-chart={chartId}\n        className={cn(\n          \"[&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border flex aspect-video justify-center text-xs [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-hidden [&_.recharts-sector]:outline-hidden [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-surface]:outline-hidden\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n}\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nfunction ChartTooltipContent({\n  active,\n  payload,\n  className,\n  indicator = \"dot\",\n  hideLabel = false,\n  hideIndicator = false,\n  label,\n  labelFormatter,\n  labelClassName,\n  formatter,\n  color,\n  nameKey,\n  labelKey,\n}: React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n  React.ComponentProps<\"div\"> & {\n    hideLabel?: boolean\n    hideIndicator?: boolean\n    indicator?: \"line\" | \"dot\" | \"dashed\"\n    nameKey?: string\n    labelKey?: string\n  }) {\n  const { config } = useChart()\n\n  const tooltipLabel = React.useMemo(() => {\n    if (hideLabel || !payload?.length) {\n      return null\n    }\n\n    const [item] = payload\n    const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n    const itemConfig = getPayloadConfigFromPayload(config, item, key)\n    const value =\n      !labelKey && typeof label === \"string\"\n        ? config[label as keyof typeof config]?.label || label\n        : itemConfig?.label\n\n    if (labelFormatter) {\n      return (\n        <div className={cn(\"font-medium\", labelClassName)}>\n          {labelFormatter(value, payload)}\n        </div>\n      )\n    }\n\n    if (!value) {\n      return null\n    }\n\n    return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n  }, [\n    label,\n    labelFormatter,\n    payload,\n    hideLabel,\n    labelClassName,\n    config,\n    labelKey,\n  ])\n\n  if (!active || !payload?.length) {\n    return null\n  }\n\n  const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n  return (\n    <div\n      className={cn(\n        \"border-border/50 bg-background grid min-w-[8rem] items-start gap-1.5 rounded-lg border px-2.5 py-1.5 text-xs shadow-xl\",\n        className\n      )}\n    >\n      {!nestLabel ? tooltipLabel : null}\n      <div className=\"grid gap-1.5\">\n        {payload.map((item, index) => {\n          const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n          const indicatorColor = color || item.payload.fill || item.color\n\n          return (\n            <div\n              key={item.dataKey}\n              className={cn(\n                \"[&>svg]:text-muted-foreground flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5\",\n                indicator === \"dot\" && \"items-center\"\n              )}\n            >\n              {formatter && item?.value !== undefined && item.name ? (\n                formatter(item.value, item.name, item, index, item.payload)\n              ) : (\n                <>\n                  {itemConfig?.icon ? (\n                    <itemConfig.icon />\n                  ) : (\n                    !hideIndicator && (\n                      <div\n                        className={cn(\n                          \"shrink-0 rounded-[2px] border-(--color-border) bg-(--color-bg)\",\n                          {\n                            \"h-2.5 w-2.5\": indicator === \"dot\",\n                            \"w-1\": indicator === \"line\",\n                            \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                              indicator === \"dashed\",\n                            \"my-0.5\": nestLabel && indicator === \"dashed\",\n                          }\n                        )}\n                        style={\n                          {\n                            \"--color-bg\": indicatorColor,\n                            \"--color-border\": indicatorColor,\n                          } as React.CSSProperties\n                        }\n                      />\n                    )\n                  )}\n                  <div\n                    className={cn(\n                      \"flex flex-1 justify-between leading-none\",\n                      nestLabel ? \"items-end\" : \"items-center\"\n                    )}\n                  >\n                    <div className=\"grid gap-1.5\">\n                      {nestLabel ? tooltipLabel : null}\n                      <span className=\"text-muted-foreground\">\n                        {itemConfig?.label || item.name}\n                      </span>\n                    </div>\n                    {item.value && (\n                      <span className=\"text-foreground font-mono font-medium tabular-nums\">\n                        {item.value.toLocaleString()}\n                      </span>\n                    )}\n                  </div>\n                </>\n              )}\n            </div>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nfunction ChartLegendContent({\n  className,\n  hideIcon = false,\n  payload,\n  verticalAlign = \"bottom\",\n  nameKey,\n}: React.ComponentProps<\"div\"> &\n  Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n    hideIcon?: boolean\n    nameKey?: string\n  }) {\n  const { config } = useChart()\n\n  if (!payload?.length) {\n    return null\n  }\n\n  return (\n    <div\n      className={cn(\n        \"flex items-center justify-center gap-4\",\n        verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n        className\n      )}\n    >\n      {payload.map((item) => {\n        const key = `${nameKey || item.dataKey || \"value\"}`\n        const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n        return (\n          <div\n            key={item.value}\n            className={cn(\n              \"[&>svg]:text-muted-foreground flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3\"\n            )}\n          >\n            {itemConfig?.icon && !hideIcon ? (\n              <itemConfig.icon />\n            ) : (\n              <div\n                className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                style={{\n                  backgroundColor: item.color,\n                }}\n              />\n            )}\n            {itemConfig?.label}\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 513, "column": 0}, "map": {"version":3,"sources":["file:///Users/melihoezkan/Documents/Projekte/Depotix/components/inventory-charts.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { AlertTriangle, TrendingUp } from \"lucide-react\";\nimport CountUp from \"react-countup\";\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartLegend,\n  ChartLegendContent,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"./ui/button\";\nimport {\n  LineChart,\n  Bar,\n  BarChart,\n  Line,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  CartesianGrid,\n  Legend,\n  LabelList,\n} from \"recharts\";\n\nconst chartConfig = {\n  available: {\n    label: \"Available Stock\",\n    color: \"hsl(var(--chart-1))\",\n  },\n  sold: {\n    label: \"Sold Items\",\n    color: \"hsl(var(--chart-2))\",\n  },\n} satisfies ChartConfig;\n\nexport const InventoryTrendChart: React.FC<InventoryTrendChartProps> = ({\n  trendData,\n  currentYearValue,\n  currentMonthValue,\n}) => {\n  const [chartType, setChartType] = useState<\"line\" | \"bar\">(\"line\");\n\n  return (\n    <Card className=\"col-span-1\">\n      <CardHeader className=\"flex flex-row items-center justify-between\">\n        <div>\n          <CardTitle className=\"text-xl font-semibold\">\n            {chartType === \"line\" ? (\n              \"Inventory Trends\"\n            ) : (\n              <CountUp\n                start={0}\n                end={currentYearValue}\n                prefix=\"$\"\n                separator=\",\"\n                decimals={2}\n              />\n            )}{\" \"}\n          </CardTitle>\n          <CardDescription>\n            {chartType === \"line\" ? (\n              <>\n                <div className=\"flex flex-col md:flex-row md:items-center md:justify-between gap-2\">\n                  <span>Monthly stock level overview:</span>\n                  <CountUp\n                    start={0}\n                    end={currentMonthValue}\n                    prefix=\"$\"\n                    separator=\",\"\n                    decimals={2}\n                    className=\"font-semibold text-primary\"\n                  />\n                </div>\n              </>\n            ) : (\n              `January - December ${new Date().getFullYear()}`\n            )}\n          </CardDescription>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button\n            variant={chartType === \"line\" ? \"default\" : \"outline\"}\n            size=\"sm\"\n            onClick={() => setChartType(\"line\")}\n          >\n            Line\n          </Button>\n          <Button\n            variant={chartType === \"bar\" ? \"default\" : \"outline\"}\n            size=\"sm\"\n            onClick={() => setChartType(\"bar\")}\n          >\n            Bar\n          </Button>\n        </div>\n      </CardHeader>\n      <CardContent className=\"h-96\">\n        {chartType === \"line\" ? (\n          <>\n            <ResponsiveContainer width=\"100%\" height=\"100%\">\n              <LineChart\n                data={trendData}\n                margin={{ top: 20, right: 30, left: 0, bottom: 5 }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"month\" />\n                <YAxis />\n                <Tooltip labelStyle={{ color: \"hsl(var(--chart-6))\", fontWeight: \"bold\" }} />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"stock\"\n                  stroke=\"hsl(var(--chart-1))\"\n                  strokeWidth={3}\n                  dot={{ r: 5 }}\n                  activeDot={{ r: 8 }}\n                />\n              </LineChart>\n            </ResponsiveContainer>\n            <CardFooter className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n              Trending up by 5.2% this year <TrendingUp className=\"h-4 w-4\" />\n            </CardFooter>\n          </>\n        ) : (\n          <>\n            <ChartContainer config={chartConfig}>\n              <BarChart\n                accessibilityLayer\n                data={trendData}\n                margin={{\n                  left: -16,\n                  right: 0,\n                }}\n              >\n                <CartesianGrid vertical={false} />\n                <XAxis\n                  dataKey=\"month\"\n                  tickLine={false}\n                  tickMargin={10}\n                  axisLine={false}\n                  tickFormatter={(value) => value.slice(0, 3)}\n                />\n                <YAxis\n                  tickLine={false}\n                  tickMargin={10}\n                  axisLine={false}\n                  tickFormatter={(value) => value.toLocaleString()}\n                  domain={[0, \"dataMax\"]}\n                />\n                <ChartTooltip content={<ChartTooltipContent />} />\n                <ChartLegend content={<ChartLegendContent />} />\n                <Bar\n                  dataKey=\"available\"\n                  stackId=\"a\"\n                  fill=\"var(--color-available)\"\n                  radius={[0, 0, 4, 4]}\n                />\n                <Bar\n                  dataKey=\"sold\"\n                  stackId=\"a\"\n                  fill=\"var(--color-sold)\"\n                  radius={[4, 4, 0, 0]}\n                />\n              </BarChart>\n            </ChartContainer>\n            <CardFooter className=\"flex-col items-start gap-2 text-sm\">\n              <div className=\"flex gap-2 font-medium leading-none\">\n                Trending up by 7.3% this month{\" \"}\n                <TrendingUp className=\"h-4 w-4\" />\n              </div>\n              <div className=\"leading-none text-muted-foreground\">\n                Inventory Performance for the year {new Date().getFullYear()}\n              </div>\n            </CardFooter>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport const LowStockAlertsChart: React.FC<LowStockAlertsProps> = ({\n  lowStockData,\n}) => {\n  return (\n    <Card className=\"col-span-1\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          Low Stock Alerts\n          <Badge\n            variant=\"outline\"\n            className=\"bg-red-50 text-red-700 border-red-200 text-xs\"\n          >\n            <AlertTriangle className=\"h-4 w-4 mr-1\" />\n            Critical\n          </Badge>\n        </CardTitle>\n      </CardHeader>\n      <CardContent>\n        {lowStockData.length > 0 ? (\n          <ResponsiveContainer width=\"100%\" height={320}>\n            <BarChart\n              data={lowStockData}\n              margin={{ top: 20, right: 30, left: 0, bottom: 10 }}\n              barGap={8}\n            >\n              <CartesianGrid strokeDasharray=\"3 3\" strokeOpacity={0.1} />\n              <XAxis\n                dataKey=\"name\"\n                tick={{ fontSize: 12 }}\n                angle={-10}\n                dy={10}\n              />\n              <YAxis tick={{ fontSize: 12 }} />\n              <Tooltip\n                contentStyle={{\n                  backgroundColor: \"#fff\",\n                  borderRadius: 8,\n                  border: \"none\",\n                }}\n                labelStyle={{ color: \"hsl(var(--chart-6))\", fontWeight: \"bold\" }}\n              />\n              <Legend wrapperStyle={{ fontSize: 12 }} />\n              <Bar\n                dataKey=\"Threshold\"\n                fill=\"hsl(var(--chart-2))\"\n                radius={[8, 8, 0, 0]}\n                barSize={20}\n              >\n                <LabelList\n                  dataKey=\"Threshold\"\n                  position=\"top\"\n                  className=\"fill-muted-foreground text-xs\"\n                />\n              </Bar>\n              <Bar\n                dataKey=\"Quantity\"\n                fill=\"#EF4444\"\n                radius={[8, 8, 0, 0]}\n                barSize={20}\n              >\n                <LabelList\n                  dataKey=\"Quantity\"\n                  position=\"top\"\n                  className=\"fill-white text-xs\"\n                />\n              </Bar>\n            </BarChart>\n          </ResponsiveContainer>\n        ) : (\n          <div className=\"text-center py-4 text-gray-500\">\n            No low stock items\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1108, "column": 0}, "map": {"version":3,"sources":["file:///Users/melihoezkan/Documents/Projekte/Depotix/components/dashboard-metrics-cards.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Package, AlertTriangle, DollarSign, Tag } from \"lucide-react\";\nimport CountUp from \"react-countup\";\nimport { Bar, BarChart, Line, LineChart, XAxis } from \"recharts\";\nimport {\n  type ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\n\nconst chartConfig = {\n  inventoryValue: {\n    label: \"Value\",\n    color: \"hsl(var(--chart-7))\",\n  },\n  totalItems: {\n    label: \"Quantity\",\n    color: \"hsl(var(--chart-7))\",\n  },\n} satisfies ChartConfig;\n\nexport const DashboardMetrics: React.FC<DashboardMetricsProps> = ({\n  totalItems,\n  inventoryItems,\n  lowStockItems,\n  totalValue,\n  lowStockData,\n  totalCategories,\n  activeCategories,\n}) => {\n  // Limit the number of items for the chart to most recent 10\n  const maxItems = 10;\n  const limitedInventoryItems = inventoryItems\n    .sort(\n      (a, b) =>\n        new Date(b.last_updated || \"\").getTime() -\n        new Date(a.last_updated || \"\").getTime() // Sort by most recent\n    )\n    .slice(0, maxItems);\n\n  // dynamic chart data\n  const chartData = limitedInventoryItems.map((item) => ({\n    inventoryValue: Number(item.price || 0) * (item.available_qty ?? 0),\n    totalItems: item.available_qty ?? 0,\n    name: item.name,\n  }));\n\n  const totalAvailableUnits = inventoryItems.reduce(\n    (sum, item) => sum + (item.available_qty ?? 0),\n    0\n  );\n\n  return (\n    <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n      \n      {/* Total Items Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Total Items</CardTitle>\n          <Package className=\"h-4 w-4 text-gray-500\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">\n            <CountUp start={0} end={totalItems} />\n          </div>\n          <p className=\"text-xs text-gray-500\">\n            {totalAvailableUnits} units\n            in stock\n          </p>\n          <ChartContainer config={chartConfig} className=\"h-[80px] w-full\">\n            <BarChart data={chartData}>\n              <ChartTooltip content={<ChartTooltipContent />} />\n              <XAxis dataKey=\"name\" tick={{ fontSize: 6 }} angle={10} dy={10} />\n              <Bar\n                dataKey=\"totalItems\"\n                fill=\"var(--color-totalItems)\"\n                radius={4}\n              />\n            </BarChart>\n          </ChartContainer>\n        </CardContent>\n      </Card>\n\n      {/* Low Stock Items Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Low Stock Items</CardTitle>\n          <AlertTriangle className=\"h-4 w-4 text-amber-500\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">\n            <CountUp start={0} end={lowStockItems} />\n          </div>\n          <p className=\"text-xs text-gray-500\">\n            {totalItems > 0\n              ? ((lowStockItems / totalItems) * 100).toFixed(1)\n              : 0}\n            % of inventory needs reordering\n          </p>\n\n          <ChartContainer config={chartConfig} className=\"h-[80px] w-full\">\n            <LineChart\n              data={lowStockData}\n              margin={{\n                top: 5,\n                right: 10,\n                left: 10,\n                bottom: 0,\n              }}\n            >\n              <Line\n                type=\"monotone\"\n                strokeWidth={2}\n                dataKey=\"Quantity\"\n                stroke=\"#EF4444\"\n                activeDot={{\n                  r: 6,\n                }}\n              />\n              <XAxis dataKey=\"name\" tick={{ fontSize: 6 }} angle={10} dy={10} />\n              <ChartTooltip content={<ChartTooltipContent />} />\n            </LineChart>\n          </ChartContainer>\n        </CardContent>\n      </Card>\n\n      {/* Total Inventory Value Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">\n            Total Inventory Value\n          </CardTitle>\n          <DollarSign className=\"h-4 w-4 text-green-500\" />\n        </CardHeader>\n        <CardContent>\n          <div className=\"text-2xl font-bold\">\n            <CountUp\n              start={0}\n              prefix=\"$\"\n              end={totalValue}\n              separator=\",\"\n              decimals={2}\n              decimal=\".\"\n            />\n          </div>\n          <p className=\"text-xs text-gray-500\">\n            Avg. ${totalItems > 0 ? (totalValue / totalItems).toFixed(2) : 0}{\" \"}\n            per item\n          </p>\n          <ChartContainer config={chartConfig} className=\"h-[80px] w-full\">\n            <LineChart\n              data={chartData}\n              margin={{\n                top: 5,\n                right: 10,\n                left: 10,\n                bottom: 0,\n              }}\n            >\n              <Line\n                type=\"monotone\"\n                strokeWidth={2}\n                dataKey=\"inventoryValue\"\n                stroke=\"var(--color-inventoryValue)\"\n                activeDot={{\n                  r: 6,\n                }}\n              />\n              <XAxis dataKey=\"name\" tick={{ fontSize: 6 }} angle={10} dy={10} />\n              <ChartTooltip content={<ChartTooltipContent />} />\n            </LineChart>\n          </ChartContainer>\n        </CardContent>\n      </Card>\n\n      {/* Total Categories Card */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between pb-2\">\n          <CardTitle className=\"text-sm font-medium\">Categories</CardTitle>\n          <Tag className=\"h-4 w-4 text-purple-500\" />\n        </CardHeader>\n        <CardContent>\n        <div className=\"flex flex-col items-center gap-2\">\n      <div className=\"flex flex-row items-center gap-4\">\n        <div className=\"text-center\">\n          <p className=\"text-xs text-gray-500\">Active</p>\n          <CountUp start={0} end={activeCategories} className=\"text-2xl font-bold text-primary\" />\n        </div>\n        <span className=\"text-gray-400 text-4xl\">/</span>\n        <div className=\"text-center\">\n          <p className=\"text-xs text-gray-500\">Total</p>\n          <CountUp start={0} end={totalCategories} className=\"text-2xl font-bold text-primary\" />\n        </div>\n      </div>\n          <p className=\"text-xs text-gray-500\">\n            {totalItems > 0 ? (totalItems / activeCategories).toFixed(1) : 0}{\" \"}\n            items per category avg.\n          </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1667, "column": 0}, "map": {"version":3,"sources":["file:///Users/melihoezkan/Documents/Projekte/Depotix/components/inventory-category-card.tsx"],"sourcesContent":["import { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\n\n\nexport const InventoryByCategory: React.FC<InventoryByCategoryProps> = ({\n  categories,\n  inventoryItems,\n}) => {\n  return (\n    <Card>\n      <CardHeader>\n        <CardTitle>Inventory by Category</CardTitle>\n      </CardHeader>\n      <CardContent>\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n          {categories.map((category) => {\n            const categoryItems = inventoryItems.filter(\n              (item) => item.category === category.id\n            );\n            const categoryValue = categoryItems.reduce(\n              (sum, item) => sum + Number(item.price) * (item.available_qty ?? 0),\n              0\n            );\n\n            return (\n              <Card key={category.id} className=\"overflow-hidden\">\n                <CardHeader className=\"p-4 pb-2\">\n                  <CardTitle className=\"text-sm\">{category.name}</CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-4 pt-2\">\n                  <div className=\"flex justify-between items-center\">\n                    <div>\n                      <p className=\"text-xs text-gray-500\">Items</p>\n                      <p className=\"font-medium\">{categoryItems.length}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-xs text-gray-500\">Value</p>\n                      <p className=\"font-medium\">\n                        ${categoryValue.toFixed(2)}\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-xs text-gray-500\">Quantity</p>\n                      <p className=\"font-medium\">\n                        {categoryItems.reduce(\n                          (sum, item) => sum + (item.available_qty ?? 0),\n                          0\n                        )}\n                      </p>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            );\n          })}\n          {categories.length === 0 && (\n            <div className=\"col-span-full text-center py-4 text-gray-500\">\n              No categories found\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n};"],"names":[],"mappings":";;;;AAAA;;;AAGO,MAAM,sBAA0D,CAAC,EACtE,UAAU,EACV,cAAc,EACf;IACC,qBACE,8OAAC,yHAAA,CAAA,OAAI;;0BACH,8OAAC,yHAAA,CAAA,aAAU;0BACT,cAAA,8OAAC,yHAAA,CAAA,YAAS;8BAAC;;;;;;;;;;;0BAEb,8OAAC,yHAAA,CAAA,cAAW;0BACV,cAAA,8OAAC;oBAAI,WAAU;;wBACZ,WAAW,GAAG,CAAC,CAAC;4BACf,MAAM,gBAAgB,eAAe,MAAM,CACzC,CAAC,OAAS,KAAK,QAAQ,KAAK,SAAS,EAAE;4BAEzC,MAAM,gBAAgB,cAAc,MAAM,CACxC,CAAC,KAAK,OAAS,MAAM,OAAO,KAAK,KAAK,IAAI,CAAC,KAAK,aAAa,IAAI,CAAC,GAClE;4BAGF,qBACE,8OAAC,yHAAA,CAAA,OAAI;gCAAmB,WAAU;;kDAChC,8OAAC,yHAAA,CAAA,aAAU;wCAAC,WAAU;kDACpB,cAAA,8OAAC,yHAAA,CAAA,YAAS;4CAAC,WAAU;sDAAW,SAAS,IAAI;;;;;;;;;;;kDAE/C,8OAAC,yHAAA,CAAA,cAAW;wCAAC,WAAU;kDACrB,cAAA,8OAAC;4CAAI,WAAU;;8DACb,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,8OAAC;4DAAE,WAAU;sEAAe,cAAc,MAAM;;;;;;;;;;;;8DAElD,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,8OAAC;4DAAE,WAAU;;gEAAc;gEACvB,cAAc,OAAO,CAAC;;;;;;;;;;;;;8DAG5B,8OAAC;;sEACC,8OAAC;4DAAE,WAAU;sEAAwB;;;;;;sEACrC,8OAAC;4DAAE,WAAU;sEACV,cAAc,MAAM,CACnB,CAAC,KAAK,OAAS,MAAM,CAAC,KAAK,aAAa,IAAI,CAAC,GAC7C;;;;;;;;;;;;;;;;;;;;;;;;+BArBD,SAAS,EAAE;;;;;wBA6B1B;wBACC,WAAW,MAAM,KAAK,mBACrB,8OAAC;4BAAI,WAAU;sCAA+C;;;;;;;;;;;;;;;;;;;;;;;AAQ1E","debugId":null}},
    {"offset": {"line": 1845, "column": 0}, "map": {"version":3,"sources":["file:///Users/melihoezkan/Documents/Projekte/Depotix/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { AlertTriangle, ArrowDown, ArrowUp, Box } from \"lucide-react\";\nimport { inventoryAPI, logAPI, categoryAPI } from \"@/lib/api\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useAuth } from \"@/lib/auth\";\nimport {\n  InventoryTrendChart,\n  LowStockAlertsChart,\n} from \"@/components/inventory-charts\";\nimport { DashboardMetrics } from \"@/components/dashboard-metrics-cards\";\nimport { InventoryByCategory } from \"@/components/inventory-category-card\";\nimport { getInventoryTrendData } from \"@/lib/utils\";\n\nexport default function Dashboard() {\n  const { user } = useAuth();\n  const [inventoryItems, setInventoryItems] = useState<InventoryItem[]>([]);\n  const [logs, setLogs] = useState<InventoryLog[]>([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        setIsLoading(true);\n        const [itemsData, logsData, categoriesData] = await Promise.all([\n          inventoryAPI.getItems(),\n          logAPI.getLogs({ limit: 5 }), // Get only the 5 most recent logs\n          categoryAPI.getCategories(),\n        ]);\n\n        // Handle different response structures\n        setInventoryItems(\n          Array.isArray(itemsData) ? itemsData : itemsData.results || []\n        );\n        setLogs(\n          Array.isArray(logsData)\n            ? logsData.slice(0, 5)\n            : logsData.results || []\n        );\n        setCategories(\n          Array.isArray(categoriesData)\n            ? categoriesData\n            : categoriesData.results || []\n        );\n      } catch (err) {\n        setError(\"Dashboard-Daten konnten nicht geladen werden\");\n        console.error(err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDashboardData();\n  }, []);\n\n  // dashboard metrics calculations to handle empty arrays\n  const totalItems = Array.isArray(inventoryItems) ? inventoryItems.length : 0;\n  const lowStockItems = Array.isArray(inventoryItems)\n    ? inventoryItems.filter((item) => item.is_low_stock).length\n    : 0;\n  const totalValue = Array.isArray(inventoryItems)\n    ? inventoryItems.reduce(\n        (sum, item) => sum + Number(item.price || 0) * (item.available_qty || 0),\n        0\n      )\n    : 0;\n  const activeCategories = Array.isArray(inventoryItems)\n    ? new Set(inventoryItems.map((item) => item.category)).size\n    : 0;\n\n  const totalCategories = Array.isArray(categories) ? categories.length : 0;\n\n  const lowStockData = inventoryItems\n    .filter((item) => item.is_low_stock)\n    .slice(0, 5)\n    .map((item) => ({\n      name: item.name,\n      // ensure Quantity is always a number (fallback to 0 when undefined)\n      Quantity: item.available_qty ?? 0,\n      // prefer unified low_stock_threshold, fall back to legacy min_stock_level, then a sensible default\n      Threshold: item.low_stock_threshold ?? item.min_stock_level ?? 10,\n    }));\n\n  const { trendData, currentYearValue, currentMonthValue } =\n    getInventoryTrendData(inventoryItems);\n\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin h-8 w-8 border-4 border-primary border-t-transparent rounded-full mx-auto\"></div>\n          <p className=\"mt-2\">Dashboard-Daten werden geladen...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"flex items-center justify-center h-full\">\n        <div className=\"text-center text-red-500\">\n          <AlertTriangle className=\"h-8 w-8 mx-auto\" />\n          <p className=\"mt-2\">{error}</p>\n          <p className=\"text-sm text-gray-500 mt-1\">\n            Bitte überprüfen Sie Ihre API-Verbindung\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center\">\n        <h1 className=\"text-2xl font-bold\">\n          Willkommen, {user?.first_name || user?.username}\n        </h1>\n      </div>\n\n      <DashboardMetrics\n        totalItems={totalItems}\n        inventoryItems={inventoryItems}\n        lowStockItems={lowStockItems}\n        totalValue={totalValue}\n        totalCategories={totalCategories}\n        activeCategories={activeCategories}\n        lowStockData={lowStockData}\n      />\n\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <InventoryTrendChart\n          trendData={trendData}\n          currentYearValue={currentYearValue}\n          currentMonthValue={currentMonthValue}\n        />\n\n        <LowStockAlertsChart lowStockData={lowStockData} />\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Letzte Aktivitäten</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Artikel</TableHead>\n                <TableHead>Aktion</TableHead>\n                <TableHead>Vorherige Menge</TableHead>\n                <TableHead>Mengenänderung</TableHead>\n                <TableHead>Aktuelle Menge</TableHead>\n                <TableHead>Datum</TableHead>\n                <TableHead>Benutzer</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {logs.map((log) => (\n                <TableRow key={log.id}>\n                  <TableCell className=\"font-medium\">\n                    {log.item_name || `Artikel #${log.item}`}\n                  </TableCell>\n                  <TableCell>\n                    <Badge\n                      variant=\"outline\"\n                      className={\n                        log.action === \"ADD\"\n                          ? \"bg-green-50 text-green-700 border-green-200\"\n                          : log.action === \"REMOVE\"\n                          ? \"bg-red-50 text-red-700 border-red-200\"\n                          : \"bg-blue-50 text-blue-700 border-blue-200\"\n                      }\n                    >\n                      {log.action === \"ADD\" ? (\n                        <ArrowUp className=\"h-3 w-3 mr-1\" />\n                      ) : log.action === \"REMOVE\" ? (\n                        <ArrowDown className=\"h-3 w-3 mr-1\" />\n                      ) : (\n                        <Box className=\"h-3 w-3 mr-1\" />\n                      )}\n                      {log.action}\n                    </Badge>\n                  </TableCell>\n                  <TableCell>{log.previous_quantity}</TableCell>\n                  <TableCell>\n                    {log.action === \"ADD\"\n                      ? \"+\"\n                      : log.action === \"REMOVE\"\n                      ? \"-\"\n                      : \"±\"}\n                    {log.quantity_change}\n                  </TableCell>\n                  <TableCell>{log.new_quantity}</TableCell>\n                  <TableCell>\n                    {new Date(log.timestamp).toLocaleDateString()}\n                  </TableCell>\n                  <TableCell>{log.username}</TableCell>\n                </TableRow>\n              ))}\n              {logs.length === 0 && (\n                <TableRow>\n                  <TableCell\n                    colSpan={5}\n                    className=\"text-center py-4 text-gray-500\"\n                  >\n                    Keine letzten Aktivitäten\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n\n      <InventoryByCategory\n        categories={categories}\n        inventoryItems={inventoryItems}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}