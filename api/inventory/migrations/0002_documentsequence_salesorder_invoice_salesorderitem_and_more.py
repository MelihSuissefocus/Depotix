# Generated by Django 5.0.8 on 2025-09-11 07:11

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(choices=[('LS', 'Sales Order'), ('INV', 'Invoice')], max_length=10, unique=True)),
                ('year', models.IntegerField()),
                ('last_number', models.IntegerField(default=0)),
            ],
            options={
                'unique_together': {('document_type', 'year')},
            },
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('CONFIRMED', 'Confirmed'), ('DELIVERED', 'Delivered'), ('INVOICED', 'Invoiced')], default='DRAFT', max_length=20)),
                ('order_date', models.DateTimeField(auto_now_add=True)),
                ('delivery_date', models.DateField(blank=True, null=True)),
                ('currency', models.CharField(default='CHF', max_length=3)),
                ('total_net', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_tax', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('total_gross', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_orders', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='inventory.customer')),
            ],
            options={
                'ordering': ['-order_date'],
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_number', models.CharField(blank=True, max_length=20, unique=True)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('total_net', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_tax', models.DecimalField(decimal_places=2, max_digits=12)),
                ('total_gross', models.DecimalField(decimal_places=2, max_digits=12)),
                ('currency', models.CharField(default='CHF', max_length=3)),
                ('pdf_file', models.TextField(blank=True, help_text='Path to generated PDF file')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='invoice', to='inventory.salesorder')),
            ],
            options={
                'ordering': ['-issue_date'],
            },
        ),
        migrations.CreateModel(
            name='SalesOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty_base', models.PositiveIntegerField(help_text='Quantity in base units')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per base unit', max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Tax rate as percentage (e.g., 7.7 for 7.7%)', max_digits=5)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='inventory.inventoryitem')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='inventory.salesorder')),
            ],
        ),
        migrations.CreateModel(
            name='StockMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('RETURN', 'Return'), ('DEFECT', 'Defective'), ('ADJUST', 'Adjustment')], max_length=20)),
                ('qty_base', models.PositiveIntegerField(help_text='Quantity in base units')),
                ('qty_pallets', models.IntegerField(default=0, help_text='Quantity in pallets')),
                ('qty_packages', models.IntegerField(default=0, help_text='Quantity in packages')),
                ('qty_singles', models.IntegerField(default=0, help_text='Quantity in single units')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('note', models.TextField(blank=True, help_text='Movement notes or reason')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_movements', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='inventory.customer')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_movements', to='inventory.inventoryitem')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stock_movements', to='inventory.supplier')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='salesorder',
            index=models.Index(fields=['order_number'], name='inventory_s_order_n_3d284e_idx'),
        ),
        migrations.AddIndex(
            model_name='salesorder',
            index=models.Index(fields=['customer', 'order_date'], name='inventory_s_custome_0e1c36_idx'),
        ),
        migrations.AddIndex(
            model_name='salesorder',
            index=models.Index(fields=['status', 'order_date'], name='inventory_s_status_d1a94a_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['invoice_number'], name='inventory_i_invoice_2c316e_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['issue_date'], name='inventory_i_issue_d_cebff9_idx'),
        ),
        migrations.AddIndex(
            model_name='invoice',
            index=models.Index(fields=['due_date'], name='inventory_i_due_dat_f2a6bb_idx'),
        ),
        migrations.AddIndex(
            model_name='salesorderitem',
            index=models.Index(fields=['order'], name='inventory_s_order_i_073483_idx'),
        ),
        migrations.AddIndex(
            model_name='salesorderitem',
            index=models.Index(fields=['item'], name='inventory_s_item_id_b05f34_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['item', 'created_at'], name='inventory_s_item_id_a9fe64_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['type', 'created_at'], name='inventory_s_type_ad780b_idx'),
        ),
        migrations.AddIndex(
            model_name='stockmovement',
            index=models.Index(fields=['created_by', 'created_at'], name='inventory_s_created_ea4848_idx'),
        ),
    ]
